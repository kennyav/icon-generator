import { type NextPage } from "next";
import Head from "next/head";
import { useState } from "react";
import Button from "~/component/Button";
import FormGroup from "~/component/FormGroup";
import { Input } from "~/component/Input";
import { api } from "~/utils/api";
import Image from "next/image";

const colors = [
   "red",
   "orange",
   "yellow",
   "green",
   "teal",
   "blue",
   "indigo",
   "purple",
   "pink",
   "gray",
   "white",
   "black"
]

const styles = [
   "monochromatic",
   "metallic"
]

const GeneratePage: NextPage = () => {
   const [form, setForm] = useState({
      prompt: "",
      bgColor: "",
      style: "",
   });

   const [imagesUrl, setImagesUrl] = useState('');

   const generateIcon = api.generate.generateIcon.useMutation({
      onSuccess(data) {
         if (!data.imageUrl) return;
         setImagesUrl(data.imageUrl);
      }
   });

   function handleFormSubmit(e: React.FormEvent) {
      e.preventDefault();
      generateIcon.mutate(form);
   }

   function updateForm(key: string) {
      return function (e: React.ChangeEvent<HTMLInputElement>) {
         setForm(prev => ({
            ...prev,
            [key]: e.target.value,
         }))
      }
   }

   return (
      <>
         <Head>
            <title>Generate Icons</title>
            <meta name="description" content="Generated by create-t3-app" />
            <link rel="icon" href="/favicon.ico" />
         </Head>
         <main className="container mx-auto mt-24 flex min-h-screen flex-col gap-4 px-4">
            <h1 className="text-5xl font-extrabold tracking-tight text-dark dark:text-white sm:text-[5rem] mr-2">
               Generate your <span className="text-[hsl(212,74%,58%)]">Icons</span>
            </h1>
            <p className="text-2xl mb-12">Fill out the forms below to start generating your icons</p>
            <form
               className="flex flex-col gap-4 mb-12"
               onSubmit={handleFormSubmit}
            >
               <h2 className="text-xl">Step 1: Describe your icon</h2>
               <h3 className="text-xl">Example: a simple cute mochi character on a pedastool</h3>
               <FormGroup className="mb-12">
                  <label>Prompt</label>
                  <Input
                     value={form.prompt}
                     onChange={updateForm("prompt")} />
               </FormGroup>


               <h2 className="text-xl">Step 2: Pick your icon&apos;s background color</h2>
               <FormGroup className="grid grid-cols-4 grid-flow-row gap-4 mb-12">
                  {colors.map(bgColor => (
                     <label key={bgColor} className="flex text-2xl gap-2 cursor-pointer">
                        <input
                           type="radio"
                           name="bgColor"
                           checked={bgColor === form.bgColor}
                           onChange={() => setForm((prev) => ({ ...prev, bgColor }))}>
                        </input>
                        {bgColor}
                     </label>))}
               </FormGroup>

               <h2 className="text-xl">Step 3: Select your style</h2>
               <FormGroup className="grid grid-cols-1 grid-flow-row gap-4 mb-12">
                  {styles.map(style => (
                     <label key={style} className="flex text-2xl gap-2 cursor-pointer">
                        <input
                           type="radio"
                           name="style"
                           checked={style === form.style}
                           onChange={() => setForm((prev) => ({ ...prev, style }))}>
                        </input>
                        {style}
                     </label>))}
               </FormGroup>

               <Button
                  type="submit"
                  variant="primary"
                  disabled={generateIcon.isLoading}
                  isLoading={generateIcon.isLoading}>
                  Submit
               </Button>
            </form>
            {imagesUrl && (
               <>
                  <h2 className="text-xl">Your Icons</h2>
                  <section className="grid grid-cols-4 gap-4 mb-24">
                     {/* {imagesUrl.map(({ imageUrl }) => ( */}
                     <Image
                        src={imagesUrl}
                        alt="an image of your generated prompt"
                        width="512"
                        height="512"
                        className="w-full rounded-md"
                     />
                     {/* ))} */}
                  </section>
               </>
            )}
         </main>
      </>
   );
};

export default GeneratePage;