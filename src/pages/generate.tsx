import { type NextPage } from "next";
import Head from "next/head";
import { useState } from "react";
import Button from "~/component/Button";
import FormGroup from "~/component/FormGroup";
import { Input } from "~/component/Input";
import { api } from "~/utils/api";
import Image from "next/image";


const GeneratePage: NextPage = () => {
   const [form, setForm] = useState({
      prompt: "",
   });
   const [imageUrl, setImageUrl] = useState('');

   const generateIcon = api.generate.generateIcon.useMutation({
      onSuccess(data) {
         console.log("mutation finished", data.imageUrl);
         if (!data.imageUrl) return;
         setImageUrl(data.imageUrl);
      }
   });

   function handleFormSubmit(e: React.FormEvent) {
      e.preventDefault();
      // TODO: submit form data to the backend
      generateIcon.mutate({
         prompt: form.prompt,
      });

      setForm({
         prompt: "",
      });
   }

   function updateForm(key: string) {
      return function (e: React.ChangeEvent<HTMLInputElement>) {
         setForm(prev => ({
            ...prev,
            [key]: e.target.value,
         }))
      }
   }

   return (
      <>
         <Head>
            <title>Generate Icons</title>
            <meta name="description" content="Generated by create-t3-app" />
            <link rel="icon" href="/favicon.ico" />
         </Head>
         <main className="container mx-auto mt-24 flex min-h-screen flex-col gap-4">
            <h1 className="text-5xl font-extrabold tracking-tight text-dark dark:text-white sm:text-[5rem] mr-2">
               Generate your <span className="text-[hsl(280,100%,70%)]">Icons</span>
            </h1>
            <p className="text-2xl mb-12">Fill out the forms below to start generating your icons</p>
            <form
               className="flex flex-col gap-4"
               onSubmit={handleFormSubmit}
            >
               <h2 className="text-xl">Step 1: Describe what you want your icon to look like</h2>
               <FormGroup>
                  <label>Prompt</label>
                  <Input
                     value={form.prompt}
                     onChange={updateForm("prompt")
                     } />
               </FormGroup>

               <h2 className="text-xl">Step 2: Pick your icon's background color</h2>
               <FormGroup>
                  <label>Background Color</label>
                  <Input
                     value={form.prompt}
                     onChange={updateForm("prompt")
                     } />
               </FormGroup>

               <Button
                  type="submit"
                  varient="primary"
                  disabled={generateIcon.isLoading}
                  isLoading={generateIcon.isLoading}>
                  Submit
               </Button>
            </form>
            {imageUrl && (
               <>
                  <h2 className="text-xl">Your Icons</h2>
                  <section className="grid grid-cols-4 gap-4">
                  <Image
                     src={imageUrl}
                     alt="an image of your generated prompt"
                     height="100"
                     width="100" 
                     className="w-full"/>
                  </section>
               </>
            )}
         </main>
      </>
   );
};

export default GeneratePage;

